services:
  server:
    build:
      context: server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./server/keys:/app/keys:ro
      - user-files:/app/storage
      - ./server/logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=tatou
      - DB_USER=${MARIADB_USER}
      - DB_PASSWORD=${MARIADB_PASSWORD}
      - FLAG_2=${FLAG_2}
      - RMAP_BASE_PDF=/app/group_17_rmap.pdf
      - RMAP_KEYS_DIR=/app/keys
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: mariadb:10.6
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MARIADB_DATABASE=tatou
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
    ports:
      - "3307:3306"   # use 3307 on host
    volumes:
      - db-data:/var/lib/mysql
      - ./db/tatou.sql:/docker-entrypoint-initdb.d/10-tatou.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 -u root --password=$MARIADB_ROOT_PASSWORD --silent"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin:5.2
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - PMA_USER=${MARIADB_USER}
      - PMA_PASSWORD=${MARIADB_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    platform: linux/amd64   # force amd64 for Mac M1/M2
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped

  # loki and promtail removed â€” using Prometheus + Grafana only

  grafana:
    image: grafana/grafana:9.5.0
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  db-data:
  user-files:
  prometheus-data:
  grafana-data:
